{"ast":null,"code":"var _jsxFileName = \"/home/mark-davies/Development/code/phase-2/smart-goal-planner/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport GoalList from './components/GoalList';\nimport AddGoalForm from './components/AddGoalForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000';\nfunction App() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch goals (can be reused if needed)\n  const fetchGoals = () => {\n    setLoading(true);\n    setError(null);\n    fetch(`${API_BASE_URL}/goals`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setGoals(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching goals:\", err);\n      setError(\"Failed to load goals. Please try again later.\");\n      setLoading(false);\n    });\n  };\n\n  // Initial fetch when the component mounts\n  useEffect(() => {\n    fetchGoals();\n  }, []);\n\n  // Function to handle adding a new goal (from previous step)\n  const handleAddGoal = newGoalData => {\n    fetch(`${API_BASE_URL}/goals`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newGoalData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(addedGoal => {\n      setGoals(prevGoals => [...prevGoals, addedGoal]);\n      alert('Goal added successfully!');\n    }).catch(err => {\n      console.error(\"Error adding goal:\", err);\n      alert('Failed to add goal: ' + err.message);\n    });\n  };\n\n  // --- NEW: Function to handle updating a goal ---\n  // This will be used for deposits, and later for editing other fields\n  const handleUpdateGoal = (goalId, updates) => {\n    fetch(`${API_BASE_URL}/goals/${goalId}`, {\n      method: 'PATCH',\n      // Use PATCH for partial updates\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updates) // Send only the updated fields\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(updatedGoal => {\n      // Update the goals state: find the updated goal and replace it\n      setGoals(prevGoals => prevGoals.map(goal => goal.id === updatedGoal.id ? updatedGoal : goal));\n      // Optional: alert('Goal updated successfully!');\n    }).catch(err => {\n      console.error(\"Error updating goal:\", err);\n      alert('Failed to update goal: ' + err.message);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading goals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Smart Goal Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"overview-dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Goals: \", goals.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"add-goal-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddGoalForm, {\n          onAddGoal: handleAddGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"goal-list-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoalList, {\n          goals: goals,\n          onUpdateGoal: handleUpdateGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BoarlXa4k+iXRjvEOsgKyD+0K9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoalList","AddGoalForm","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","goals","setGoals","loading","setLoading","error","setError","fetchGoals","fetch","then","response","ok","Error","status","json","data","catch","err","console","handleAddGoal","newGoalData","method","headers","body","JSON","stringify","addedGoal","prevGoals","alert","message","handleUpdateGoal","goalId","updates","updatedGoal","map","goal","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onAddGoal","onUpdateGoal","_c","$RefreshReg$"],"sources":["/home/mark-davies/Development/code/phase-2/smart-goal-planner/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport GoalList from './components/GoalList';\nimport AddGoalForm from './components/AddGoalForm';\nimport './App.css'; \n\nconst API_BASE_URL = 'http://localhost:3000'; \n\nfunction App() {\n  const [goals, setGoals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch goals (can be reused if needed)\n  const fetchGoals = () => {\n    setLoading(true);\n    setError(null);\n    fetch(`${API_BASE_URL}/goals`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setGoals(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"Error fetching goals:\", err);\n        setError(\"Failed to load goals. Please try again later.\");\n        setLoading(false);\n      });\n  };\n\n  // Initial fetch when the component mounts\n  useEffect(() => {\n    fetchGoals();\n  }, []); \n\n  // Function to handle adding a new goal (from previous step)\n  const handleAddGoal = (newGoalData) => {\n    fetch(`${API_BASE_URL}/goals`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newGoalData),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(addedGoal => {\n      setGoals(prevGoals => [...prevGoals, addedGoal]);\n      alert('Goal added successfully!');\n    })\n    .catch(err => {\n      console.error(\"Error adding goal:\", err);\n      alert('Failed to add goal: ' + err.message);\n    });\n  };\n\n  // --- NEW: Function to handle updating a goal ---\n  // This will be used for deposits, and later for editing other fields\n  const handleUpdateGoal = (goalId, updates) => {\n    fetch(`${API_BASE_URL}/goals/${goalId}`, {\n      method: 'PATCH', // Use PATCH for partial updates\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updates), // Send only the updated fields\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(updatedGoal => {\n      // Update the goals state: find the updated goal and replace it\n      setGoals(prevGoals => \n        prevGoals.map(goal => \n          goal.id === updatedGoal.id ? updatedGoal : goal\n        )\n      );\n      // Optional: alert('Goal updated successfully!');\n    })\n    .catch(err => {\n      console.error(\"Error updating goal:\", err);\n      alert('Failed to update goal: ' + err.message);\n    });\n  };\n\n\n  if (loading) {\n    return <div className=\"loading\">Loading goals...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Smart Goal Planner</h1>\n      </header>\n      <main>\n        {/* Placeholder for Overview Dashboard */}\n        <section className=\"overview-dashboard\">\n          <h2>Overview</h2>\n          <p>Total Goals: {goals.length}</p>\n          {/* Other overview stats will go here later */}\n        </section>\n\n        {/* Add Goal Form */}\n        <section className=\"add-goal-section\">\n          <h2>Add New Goal</h2>\n          <AddGoalForm onAddGoal={handleAddGoal} />\n        </section>\n\n        {/* Goal List */}\n        <section className=\"goal-list-section\">\n          <h2>Your Goals</h2>\n          {/* Pass the handleUpdateGoal function down to GoalList */}\n          <GoalList goals={goals} onUpdateGoal={handleUpdateGoal} /> \n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}