{"ast":null,"code":"var _jsxFileName = \"/home/mark-davies/Development/code/phase-2/smart-goal-planner/src/components/GoalCard.js\",\n  _s = $RefreshSig$();\n// src/components/GoalCard.js\nimport React, { useState } from 'react';\nimport './GoalCard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoalCard({\n  goal,\n  onUpdateGoal,\n  onDeleteGoal\n}) {\n  _s();\n  const [depositAmount, setDepositAmount] = useState('');\n\n  // --- NEW: State for Edit Mode ---\n  const [isEditing, setIsEditing] = useState(false);\n  // --- NEW: Local state for editable fields, initialized with current goal data ---\n  const [editedName, setEditedName] = useState(goal.name);\n  const [editedTargetAmount, setEditedTargetAmount] = useState(goal.targetAmount);\n  const [editedCategory, setEditedCategory] = useState(goal.category);\n  const [editedDeadline, setEditedDeadline] = useState(goal.deadline);\n\n  // --- Helper Functions (No changes here unless noted) ---\n  const progress = goal.savedAmount / goal.targetAmount * 100;\n  const progressBarWidth = Math.min(progress, 100);\n  const remainingAmount = goal.targetAmount - goal.savedAmount;\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  const getDeadlineStatus = deadlineDate => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const deadline = new Date(deadlineDate);\n    deadline.setHours(0, 0, 0, 0);\n    const diffTime = deadline.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 / 24)); // Fixed calculation here, was missing *24\n\n    if (goal.savedAmount >= goal.targetAmount) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status completed\",\n        children: \"Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    } else if (diffDays <= 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status overdue\",\n        children: \"Overdue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    } else if (diffDays <= 30) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status warning\",\n        children: [\"Due Soon (\", diffDays, \" days left)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"status on-track\",\n      children: [diffDays, \" days left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  };\n  const handleDeposit = () => {\n    const amount = parseFloat(depositAmount);\n    if (isNaN(amount) || amount <= 0) {\n      alert(\"Please enter a valid positive deposit amount.\");\n      return;\n    }\n    const newSavedAmount = goal.savedAmount + amount;\n    onUpdateGoal(goal.id, {\n      savedAmount: newSavedAmount\n    });\n    setDepositAmount('');\n  };\n  const handleDeleteClick = () => {\n    onDeleteGoal(goal.id);\n  };\n\n  // --- NEW: Handle Edit Actions ---\n  const handleEditClick = () => {\n    setIsEditing(true);\n    // When entering edit mode, ensure local state reflects current goal data\n    setEditedName(goal.name);\n    setEditedTargetAmount(goal.targetAmount);\n    setEditedCategory(goal.category);\n    setEditedDeadline(goal.deadline);\n  };\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    // Optionally reset edited values to original if user cancels after typing\n    setEditedName(goal.name);\n    setEditedTargetAmount(goal.targetAmount);\n    setEditedCategory(goal.category);\n    setEditedDeadline(goal.deadline);\n  };\n  const handleSaveEdit = () => {\n    // Basic validation\n    if (!editedName || !editedTargetAmount || !editedCategory || !editedDeadline) {\n      alert('Please fill in all fields for the edited goal.');\n      return;\n    }\n    const updates = {\n      name: editedName,\n      targetAmount: parseFloat(editedTargetAmount),\n      // Ensure it's a number\n      category: editedCategory,\n      deadline: editedDeadline\n    };\n\n    // Use the existing onUpdateGoal function from App.js\n    onUpdateGoal(goal.id, updates);\n    setIsEditing(false); // Exit edit mode\n  };\n\n  // --- Render logic based on isEditing state ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-card\",\n    children: isEditing ?\n    /*#__PURE__*/\n    // Render edit form\n    _jsxDEV(\"div\", {\n      className: \"edit-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `name-${goal.id}`,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `name-${goal.id}`,\n          value: editedName,\n          onChange: e => setEditedName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `targetAmount-${goal.id}`,\n          children: \"Target:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: `targetAmount-${goal.id}`,\n          value: editedTargetAmount,\n          onChange: e => setEditedTargetAmount(e.target.value),\n          required: true,\n          min: \"0\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `category-${goal.id}`,\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `category-${goal.id}`,\n          value: editedCategory,\n          onChange: e => setEditedCategory(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `deadline-${goal.id}`,\n          children: \"Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: `deadline-${goal.id}`,\n          value: editedDeadline,\n          onChange: e => setEditedDeadline(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render display mode\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goal.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Category: \", goal.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Target: \", formatCurrency(goal.targetAmount)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Saved: \", formatCurrency(goal.savedAmount)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remaining: \", formatCurrency(remainingAmount)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deadline: \", goal.deadline, \" \", getDeadlineStatus(goal.deadline)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-bar-fill ${progress >= 100 ? 'completed' : ''}`,\n          style: {\n            width: `${progressBarWidth}%`\n          },\n          children: \"         \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"progress-percentage\",\n        children: [progress.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deposit-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Deposit amount\",\n            value: depositAmount,\n            onChange: e => setDepositAmount(e.target.value),\n            min: \"0\",\n            step: \"0.01\",\n            className: \"deposit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deposit-btn\",\n            onClick: handleDeposit,\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: handleEditClick,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: handleDeleteClick,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(GoalCard, \"mY5sIs02IHf9q2NcxVCHnqEIcgE=\");\n_c = GoalCard;\nexport default GoalCard;\nvar _c;\n$RefreshReg$(_c, \"GoalCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GoalCard","goal","onUpdateGoal","onDeleteGoal","_s","depositAmount","setDepositAmount","isEditing","setIsEditing","editedName","setEditedName","name","editedTargetAmount","setEditedTargetAmount","targetAmount","editedCategory","setEditedCategory","category","editedDeadline","setEditedDeadline","deadline","progress","savedAmount","progressBarWidth","Math","min","remainingAmount","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getDeadlineStatus","deadlineDate","today","Date","setHours","diffTime","getTime","diffDays","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDeposit","parseFloat","isNaN","alert","newSavedAmount","id","handleDeleteClick","handleEditClick","handleCancelEdit","handleSaveEdit","updates","htmlFor","type","value","onChange","e","target","required","step","onClick","width","toFixed","placeholder","_c","$RefreshReg$"],"sources":["/home/mark-davies/Development/code/phase-2/smart-goal-planner/src/components/GoalCard.js"],"sourcesContent":["// src/components/GoalCard.js\nimport React, { useState } from 'react';\nimport './GoalCard.css';\n\nfunction GoalCard({ goal, onUpdateGoal, onDeleteGoal }) {\n  const [depositAmount, setDepositAmount] = useState('');\n\n  // --- NEW: State for Edit Mode ---\n  const [isEditing, setIsEditing] = useState(false);\n  // --- NEW: Local state for editable fields, initialized with current goal data ---\n  const [editedName, setEditedName] = useState(goal.name);\n  const [editedTargetAmount, setEditedTargetAmount] = useState(goal.targetAmount);\n  const [editedCategory, setEditedCategory] = useState(goal.category);\n  const [editedDeadline, setEditedDeadline] = useState(goal.deadline);\n\n\n  // --- Helper Functions (No changes here unless noted) ---\n  const progress = (goal.savedAmount / goal.targetAmount) * 100;\n  const progressBarWidth = Math.min(progress, 100);\n  const remainingAmount = goal.targetAmount - goal.savedAmount;\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  const getDeadlineStatus = (deadlineDate) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); \n    const deadline = new Date(deadlineDate);\n    deadline.setHours(0, 0, 0, 0);\n\n    const diffTime = deadline.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 / 24)); // Fixed calculation here, was missing *24\n\n    if (goal.savedAmount >= goal.targetAmount) {\n      return <span className=\"status completed\">Completed!</span>;\n    } else if (diffDays <= 0) { \n      return <span className=\"status overdue\">Overdue</span>;\n    } else if (diffDays <= 30) { \n      return <span className=\"status warning\">Due Soon ({diffDays} days left)</span>;\n    }\n    return <span className=\"status on-track\">{diffDays} days left</span>;\n  };\n\n  const handleDeposit = () => {\n    const amount = parseFloat(depositAmount);\n\n    if (isNaN(amount) || amount <= 0) {\n      alert(\"Please enter a valid positive deposit amount.\");\n      return;\n    }\n\n    const newSavedAmount = goal.savedAmount + amount;\n    onUpdateGoal(goal.id, { savedAmount: newSavedAmount });\n    setDepositAmount('');\n  };\n\n  const handleDeleteClick = () => {\n    onDeleteGoal(goal.id);\n  };\n\n  // --- NEW: Handle Edit Actions ---\n  const handleEditClick = () => {\n    setIsEditing(true);\n    // When entering edit mode, ensure local state reflects current goal data\n    setEditedName(goal.name);\n    setEditedTargetAmount(goal.targetAmount);\n    setEditedCategory(goal.category);\n    setEditedDeadline(goal.deadline);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    // Optionally reset edited values to original if user cancels after typing\n    setEditedName(goal.name);\n    setEditedTargetAmount(goal.targetAmount);\n    setEditedCategory(goal.category);\n    setEditedDeadline(goal.deadline);\n  };\n\n  const handleSaveEdit = () => {\n    // Basic validation\n    if (!editedName || !editedTargetAmount || !editedCategory || !editedDeadline) {\n      alert('Please fill in all fields for the edited goal.');\n      return;\n    }\n\n    const updates = {\n      name: editedName,\n      targetAmount: parseFloat(editedTargetAmount), // Ensure it's a number\n      category: editedCategory,\n      deadline: editedDeadline,\n    };\n\n    // Use the existing onUpdateGoal function from App.js\n    onUpdateGoal(goal.id, updates);\n\n    setIsEditing(false); // Exit edit mode\n  };\n\n  // --- Render logic based on isEditing state ---\n  return (\n    <div className=\"goal-card\">\n      {isEditing ? (\n        // Render edit form\n        <div className=\"edit-form\">\n          <div className=\"form-group\">\n            <label htmlFor={`name-${goal.id}`}>Name:</label>\n            <input\n              type=\"text\"\n              id={`name-${goal.id}`}\n              value={editedName}\n              onChange={(e) => setEditedName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor={`targetAmount-${goal.id}`}>Target:</label>\n            <input\n              type=\"number\"\n              id={`targetAmount-${goal.id}`}\n              value={editedTargetAmount}\n              onChange={(e) => setEditedTargetAmount(e.target.value)}\n              required\n              min=\"0\"\n              step=\"0.01\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor={`category-${goal.id}`}>Category:</label>\n            <input\n              type=\"text\"\n              id={`category-${goal.id}`}\n              value={editedCategory}\n              onChange={(e) => setEditedCategory(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor={`deadline-${goal.id}`}>Deadline:</label>\n            <input\n              type=\"date\"\n              id={`deadline-${goal.id}`}\n              value={editedDeadline}\n              onChange={(e) => setEditedDeadline(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"edit-actions\">\n            <button className=\"save-btn\" onClick={handleSaveEdit}>Save</button>\n            <button className=\"cancel-btn\" onClick={handleCancelEdit}>Cancel</button>\n          </div>\n        </div>\n      ) : (\n        // Render display mode\n        <>\n          <h3>{goal.name}</h3>\n          <p>Category: {goal.category}</p>\n          <p>Target: {formatCurrency(goal.targetAmount)}</p>\n          <p>Saved: {formatCurrency(goal.savedAmount)}</p>\n          <p>Remaining: {formatCurrency(remainingAmount)}</p>\n          <p>Deadline: {goal.deadline} {getDeadlineStatus(goal.deadline)}</p>\n          \n          {/* Progress Bar */}\n          <div className=\"progress-bar-container\">\n            <div\n              className={`progress-bar-fill ${progress >= 100 ? 'completed' : ''}`} \n              style={{ width: `${progressBarWidth}%` }} \n  >         </div>\n          </div>\n          <p className=\"progress-percentage\">{progress.toFixed(2)}%</p>\n\n          {/* Action Buttons */}\n          <div className=\"card-actions\">\n            <div className=\"deposit-section\">\n              <input\n                type=\"number\"\n                placeholder=\"Deposit amount\"\n                value={depositAmount}\n                onChange={(e) => setDepositAmount(e.target.value)}\n                min=\"0\"\n                step=\"0.01\"\n                className=\"deposit-input\"\n              />\n              <button className=\"deposit-btn\" onClick={handleDeposit}>Deposit</button>\n            </div>\n            \n            <button className=\"edit-btn\" onClick={handleEditClick}>Edit</button> {/* Add onClick */}\n            <button className=\"delete-btn\" onClick={handleDeleteClick}>Delete</button> \n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default GoalCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}